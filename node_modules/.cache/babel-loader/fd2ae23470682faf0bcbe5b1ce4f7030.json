{"ast":null,"code":"var _jsxFileName = \"/Users/patrickbrown/Desktop/Personal/git/personal website/src/NavBar.js\";\nimport React from 'react';\nimport './NavBar.css';\nimport { Button, ExpandingButton } from './CustomNavButton.js';\nimport { FaGithub, FaLinkedin } from 'react-icons/fa';\nimport ExpandedNavBar from './ExpandedNavBar.js';\nimport ToExpandNavBar from './ToExpandNavBar.js';\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      atTop: true,\n      showExpanded: true,\n      buttonClicked: false\n    };\n    this.handleExpandClick = this.handleExpandClick.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateState();\n  }\n\n  handleExpandClick() {\n    alert(\"expand navbar\");\n    this.setState({\n      buttonClicked: true\n    });\n    this.forceUpdate();\n  }\n\n  updateState() {\n    //if it's at the top, I want expanded to always show\n    //\n    //if it's NOT at the top, I want expanded to show only\n    //           if the button has been pressed\n    //if not at top and !show expanded,\n    this.setState({\n      atTop: this.props.atTop\n    });\n\n    if (this.state.atTop == true) {\n      this.setState({\n        showExpanded: true,\n        buttonClicked: false\n      });\n    } else if (this.state.atTop == false && this.state.buttonClicked == true) {\n      this.setState({\n        showExpanded: true\n      });\n    } else {\n      this.setState({\n        showExpanded: false\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.showExpanded ? React.createElement(ExpandedNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }) : React.createElement(ToExpandNavBar, {\n      onClick: () => this.handleExpandClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/patrickbrown/Desktop/Personal/git/personal website/src/NavBar.js"],"names":["React","Button","ExpandingButton","FaGithub","FaLinkedin","ExpandedNavBar","ToExpandNavBar","NavBar","Component","constructor","props","state","atTop","showExpanded","buttonClicked","handleExpandClick","bind","componentWillReceiveProps","nextProps","updateState","alert","setState","forceUpdate","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAAQC,MAAR,EAAgBC,eAAhB,QAAuC,sBAAvC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,gBAArC;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,eAAe,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,YAAY,EAAE,IAFL;AAGTC,MAAAA,aAAa,EAAE;AAHN,KAAb;AAKA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AACDC,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChC,SAAKC,WAAL;AACH;;AACDJ,EAAAA,iBAAiB,GAAE;AACfK,IAAAA,KAAK,CAAC,eAAD,CAAL;AACA,SAAKC,QAAL,CAAc;AAACP,MAAAA,aAAa,EAAE;AAAhB,KAAd;AACA,SAAKQ,WAAL;AACH;;AACDH,EAAAA,WAAW,GAAE;AACT;AACA;AACA;AACA;AAGA;AAEA,SAAKE,QAAL,CAAc;AAACT,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAAnB,KAAd;;AACA,QAAG,KAAKD,KAAL,CAAWC,KAAX,IAAoB,IAAvB,EAA4B;AACxB,WAAKS,QAAL,CAAc;AAACR,QAAAA,YAAY,EAAE,IAAf;AAAqBC,QAAAA,aAAa,EAAE;AAApC,OAAd;AACH,KAFD,MAGK,IAAG,KAAKH,KAAL,CAAWC,KAAX,IAAoB,KAApB,IAA6B,KAAKD,KAAL,CAAWG,aAAX,IAA4B,IAA5D,EAAkE;AACnE,WAAKO,QAAL,CAAc;AAACR,QAAAA,YAAY,EAAE;AAAf,OAAd;AACH,KAFI,MAEA;AACD,WAAKQ,QAAL,CAAc;AAACR,QAAAA,YAAY,EAAE;AAAf,OAAd;AACH;AACJ;;AACDU,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKA,KAAL,CAAWE,YAAX,GACG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAGG,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,MAAM,KAAKE,iBAAL,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,CADJ;AAUH;;AAjD+C","sourcesContent":["import React from 'react';\nimport './NavBar.css';\nimport {Button, ExpandingButton}  from './CustomNavButton.js'\nimport { FaGithub, FaLinkedin } from 'react-icons/fa';\nimport ExpandedNavBar from './ExpandedNavBar.js';\nimport ToExpandNavBar from './ToExpandNavBar.js';\nexport default class NavBar extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            atTop: true,\n            showExpanded: true,\n            buttonClicked: false\n        };\n        this.handleExpandClick = this.handleExpandClick.bind(this);\n    }\n    componentWillReceiveProps(nextProps){\n        this.updateState();\n    }\n    handleExpandClick(){\n        alert(\"expand navbar\");\n        this.setState({buttonClicked: true});\n        this.forceUpdate();\n    }\n    updateState(){\n        //if it's at the top, I want expanded to always show\n        //\n        //if it's NOT at the top, I want expanded to show only\n        //           if the button has been pressed\n\n\n        //if not at top and !show expanded,\n\n        this.setState({atTop: this.props.atTop});\n        if(this.state.atTop == true){\n            this.setState({showExpanded: true, buttonClicked: false});\n        }\n        else if(this.state.atTop == false && this.state.buttonClicked == true) {\n            this.setState({showExpanded: true});\n        }else{\n            this.setState({showExpanded: false});\n        }\n    }\n    render() {\n        console.log(this.state);\n        return(\n            <div>\n                {this.state.showExpanded ? (\n                    <ExpandedNavBar />\n                ) : (\n                    <ToExpandNavBar onClick={() => this.handleExpandClick()}/>\n                )}\n            \n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}